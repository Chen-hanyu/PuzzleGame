// Generated by view binder compiler. Do not edit!
package com.puzzle.game.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.puzzle.game.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameChyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnBack;

  @NonNull
  public final MaterialButton btnRestore;

  @NonNull
  public final LinearLayout cardButtons;

  @NonNull
  public final MaterialCardView cardInfo;

  @NonNull
  public final MaterialCardView cardPuzzle;

  @NonNull
  public final GridLayout puzzleGrid;

  @NonNull
  public final ConstraintLayout rootLayout;

  @NonNull
  public final TextView tvMoves;

  @NonNull
  public final TextView tvTimer;

  private ActivityGameChyBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnBack, @NonNull MaterialButton btnRestore,
      @NonNull LinearLayout cardButtons, @NonNull MaterialCardView cardInfo,
      @NonNull MaterialCardView cardPuzzle, @NonNull GridLayout puzzleGrid,
      @NonNull ConstraintLayout rootLayout, @NonNull TextView tvMoves, @NonNull TextView tvTimer) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnRestore = btnRestore;
    this.cardButtons = cardButtons;
    this.cardInfo = cardInfo;
    this.cardPuzzle = cardPuzzle;
    this.puzzleGrid = puzzleGrid;
    this.rootLayout = rootLayout;
    this.tvMoves = tvMoves;
    this.tvTimer = tvTimer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameChyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameChyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game_chy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameChyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      MaterialButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnRestore;
      MaterialButton btnRestore = ViewBindings.findChildViewById(rootView, id);
      if (btnRestore == null) {
        break missingId;
      }

      id = R.id.cardButtons;
      LinearLayout cardButtons = ViewBindings.findChildViewById(rootView, id);
      if (cardButtons == null) {
        break missingId;
      }

      id = R.id.cardInfo;
      MaterialCardView cardInfo = ViewBindings.findChildViewById(rootView, id);
      if (cardInfo == null) {
        break missingId;
      }

      id = R.id.cardPuzzle;
      MaterialCardView cardPuzzle = ViewBindings.findChildViewById(rootView, id);
      if (cardPuzzle == null) {
        break missingId;
      }

      id = R.id.puzzleGrid;
      GridLayout puzzleGrid = ViewBindings.findChildViewById(rootView, id);
      if (puzzleGrid == null) {
        break missingId;
      }

      ConstraintLayout rootLayout = (ConstraintLayout) rootView;

      id = R.id.tvMoves;
      TextView tvMoves = ViewBindings.findChildViewById(rootView, id);
      if (tvMoves == null) {
        break missingId;
      }

      id = R.id.tvTimer;
      TextView tvTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvTimer == null) {
        break missingId;
      }

      return new ActivityGameChyBinding((ConstraintLayout) rootView, btnBack, btnRestore,
          cardButtons, cardInfo, cardPuzzle, puzzleGrid, rootLayout, tvMoves, tvTimer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
